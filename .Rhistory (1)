mp <- ggplot(x1, aes(x = ExptShort, y = Value)) +
geom_violin(fill = "grey", alpha = 0.3, color = NA) +
geom_quasirandom(size = 0.1, alpha = 0.2, aes(color = MacroEnv)) +
facet_grid(Trait~MacroEnv, scales = "free", labeller = new.lab) +
scale_color_manual(values = c("darkgreen", "darkred", "darkblue")) +
theme_AGL +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(y = expression(italic("P")[italic("f")]), x = NULL)
ggsave("Additional/AdditionalFigure07_Pc.png", mp, width = 6, height = 4)
mp
# Prep data
xx <- read.csv("data/data_Tf_Pf.csv") %>%
mutate(MacroEnv = factor(MacroEnv, levels = macroEnvs))
x1 <- xx %>% select(Entry, Expt, ExptShort, MacroEnv, PTT, Tf, Pf) %>%
gather(Trait, Value, PTT, Tf, Pf) %>%
mutate(Trait = factor(Trait, levels = c("Tf", "Pf", "PTT")))
new.lab <- as_labeller(c(
Tf="italic(T)[italic(f)]", Pf="italic(P)[italic(f)]", PTT="PTT",
#Tf="italic(T)[b]==equation~2", Pf="italic(P)[c]==equation~3",
Mediterranean="Mediterranean", Temperate="Temperate", `South Asia`="South~Asia"),
label_parsed)
# Plot
mp <- ggplot(x1, aes(x = ExptShort, y = Value)) +
geom_violin(fill = "grey", alpha = 0.3, color = NA) +
geom_quasirandom(size = 0.1, alpha = 0.2, aes(color = MacroEnv)) +
facet_grid(Trait~MacroEnv, scales = "free", labeller = new.lab) +
scale_color_manual(values = c("darkgreen", "darkred", "darkblue")) +
theme_AGL +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(y = NULL, x = NULL)
ggsave("Additional/AdditionalFigure08_TfPcPTT.png", mp,width = 6, height = 4)
mp
# Prep data
xx <- read.csv("data/data_Tf_Pf.csv") %>%
mutate(Expt = factor(Expt, levels = names_Expt),
MacroEnv = factor(MacroEnv, levels = macroEnvs))
# Plot A)
mp1 <- gg_model_2(xx, "Tf", "predicted_Tf", "A) Thermal sum required for flowering",
200, 200, 6600, 5500)
# Plot B)
mp2 <- gg_model_2(xx, "DTF", "predicted_DTF_Tf", "B) Days from sowing to flower",
30, 30, 145, 125)
# Append A) and B)
mp <- ggarrange(mp1, mp2, nrow = 2, ncol = 1)
ggsave("SupplementalFigure6_Tf.png", mp, width = 8, height = 10)
mp
# Prep data
xx <- read.csv("data/data_Tf_Pf.csv") %>%
mutate(Expt = factor(Expt, levels = names_Expt),
MacroEnv = factor(MacroEnv, levels = macroEnvs))
# Plot A)
mp1 <- gg_model_2(xx, "Pf", "predicted_Pf", "A) Thermal sum required for flowering",
190, 190, 1350, 1150)
# Plot B)
mp2 <- gg_model_2(xx, "DTF", "predicted_DTF_Pf", "B) Days from sowing to flower",
30, 30, 145, 125)
# Append A) and B)
mp <- ggarrange(mp1, mp2, nrow = 2, ncol = 1)
ggsave("SupplementalFigure7_Pf.png", mp, width = 8, height = 10)
mp
# Prep data
yy <- c("Ro17", "Su17", "Us18", "In17", "Ba17", "Ne17", "Sp17", "Mo17", "It17")
xx <- read.csv("data/model_18_coefs.csv")
x1 <- dd %>%
select(Entry, Expt, ExptShort, DTF) %>%
left_join(xx, by = "Entry") %>%
left_join(select(ff, Expt, MacroEnv, T_mean, P_mean), by = "Expt") %>%
mutate(T_mean2 = T_mean + 1,
DTF_GW = 1 / (a + b * T_mean2 + c * P_mean),
DTF_P  = 1 / (a + b * T_mean + c * P_mean),
Diff = DTF_P - DTF_GW) %>%
filter(ExptShort %in% yy)
x2 <- dd %>%
select(Entry, Expt, ExptShort, DTF) %>%
left_join(xx, by = "Entry") %>%
left_join(select(ff, Expt, MacroEnv, T_mean, P_mean), by = "Expt") %>%
mutate(T_mean2 = T_mean + 2,
DTF_GW = 1 / (a + b * T_mean2 + c * P_mean),
DTF_P  = 1 / (a + b * T_mean + c * P_mean),
Diff = DTF_P - DTF_GW) %>%
filter(ExptShort %in% yy)
x1 <- x1 %>% mutate(GW = "A")
x2 <- x2 %>% mutate(GW = "B")
knitr::kable(x2 %>% group_by(MacroEnv) %>%
summarise(Min = round(min(Diff),2), Max = round(max(Diff),2)) )
xx <- bind_rows(x1, x2)
write.csv(xx, "data/data_Temp_Increase.csv", row.names = F)
new.lab <- as_labeller(c(A="italic(T)~+~1~degree*C", B="italic(T)~+~2~degree*C",
Mediterranean="Mediterranean", Temperate="Temperate", `South Asia`="South~Asia"),
label_parsed)
# Plot
mp <- ggplot(xx, aes(x = ExptShort, y = Diff)) +
geom_violin(fill = "grey", alpha = 0.3, color = NA) +
geom_quasirandom(size = 0.2, alpha = 0.3) +
facet_grid(GW~MacroEnv, scales = "free_x", labeller = new.lab) + #
theme_AGL +
theme(legend.position = "none",
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
panel.grid.major.y = element_line(colour = "grey70", size = 0.5)) +
scale_y_continuous(minor_breaks = seq(1,30,1),
breaks = seq(0,30,5)) +
labs(y = "Decrease in days to flower", x = NULL)
ggsave("Figure8_TempIncrease.png", mp, width = 7, height = 5)
mp
x1 <- read.csv("data/data_Temp_Increase.csv") %>% filter(GW == "A")
x2 <- select(read.csv("data/data_PCA_Results.csv"), Entry, Cluster)
xx <- left_join(x1, x2, by = "Entry") %>%
mutate(Cluster = factor(Cluster)) %>%
filter(ExptShort %in% c("Su17", "It17", "Ba17"))
mp <- ggplot(xx, aes(x = Cluster, y = Diff, fill = Cluster)) +
geom_violin(color = NA, alpha = 0.6) +
geom_quasirandom(color = "Black", alpha = 0.6) +
facet_grid(ExptShort~., scales = "free") +
theme_AGL + theme(legend.position = "none") +
scale_fill_manual(name = NULL, values = colors) +
labs(title = ,
y = "Decrease in days to flower", x = NULL)
ggsave("Additional/AdditionalFigure09_TempIncreaseByCluster.png", mp, width = 7, height = 5)
mp
# Prep data
mycts <- c("Canada", "USA", "Iran", "Yemen",
"India", "Pakistan", "Bangladesh", "Afghanistan",
"Syria", "Jordan", "Turkey", "Lebanon", "Israel")
xx <- read.csv("data/model_18_coefs.csv") %>%
left_join(select(ldp, Entry, Origin), by = "Entry") %>%
left_join(select(ct, Origin=Country, SubRegion), by = "Origin") %>%
mutate(SubRegion = ifelse(Origin == "ICARDA", "ICARDA", as.character(SubRegion)),
Origin = ifelse(Origin %in% mycts, Origin, as.character(SubRegion)))
x1 <- xx %>%
left_join(dd %>% filter(ExptShort == "Su17") %>%
select(Entry, DTF), by = "Entry") %>%
group_by(Origin) %>%
summarise_at(vars(DTF, a, b, c), funs(mean, sd)) %>%
filter(Origin != "Unknown")
x2 <- x1 %>% mutate(CO = 1) %>%
filter(Origin %in% c("Syria", "Jordan", "Turkey", "Lebanon", "Israel"))
# Plot A) a vs DTF
find_hull <- function(df) df[chull(df[,"DTF_mean"], df[,"a_mean"]), ]
polys <- plyr::ddply(x2, "CO", find_hull)
mp1 <- ggplot(x1, aes(x = DTF_mean, y = a_mean * 10000)) +
geom_polygon(data = polys, fill = NA, color = "black") +
geom_point() + geom_text_repel(aes(label = Origin)) +
theme_AGL +
labs(title = "A)",
y = expression(paste("Genotype constant (", italic(a)," x 10000)")),
x = "Days from sowing to flower (Sutherland, Canada 2017)")
# Plot B) b vs c
find_hull <- function(df) df[chull(df[,"c_mean"], df[,"b_mean"]), ]
polys <- plyr::ddply(x2, "CO", find_hull)
mp2 <- ggplot(x1, aes(x = c_mean * 10000, y = b_mean * 10000)) +
geom_polygon(data = polys, fill = NA, color = "black") +
geom_point() + geom_text_repel(aes(label = Origin)) +
theme_AGL +
labs(title = "B)",
y = expression(paste("Temperature response (", italic(b), " x 10000)")),
x = expression(paste("Photoperiod response (", italic(c), " x 10000)")))
# Append A) and B)
mp <- ggarrange(mp1, mp2, ncol = 1, nrow = 2)
ggsave("Figure9_OriginCoefficients.png", mp, width = 8, height = 8)
ggsave("Temp/Temp_F9_1.png", mp1, width = 8, height = 4)
ggsave("Temp/Temp_F9_2.png", mp2, width = 8, height = 4)
mp
# Create plotting function
gg_adapted <- function(myTitle, myExpt, sdMult = 2, myOrigin, myOrigins = myOrigin,
predictDTF = F, meanT, meanP) {
# Prep data
xx <- read.csv("data/model_18_coefs.csv") %>%
left_join(select(ldp, Entry, Origin), by = "Entry")
if(predictDTF == F) {
xx <- xx %>%
left_join(dd %>% filter(Expt == myExpt) %>%
select(Entry, DTF), by = "Entry") %>%
mutate(Origin = as.character(Origin),
Origin = ifelse(Origin %in% myOrigins, Origin, "Other"),
DTF = ifelse(is.nan(DTF), max(.$DTF,na.rm = T), DTF))
}
if(predictDTF == T) {
xx <- xx %>%
mutate(DTF = 1 / (a + b*meanT + c*meanP),
#Origin = as.character(Origin),
Origin = ifelse(Origin %in% myOrigins, as.character(Origin), "Other"))
}
xx <- xx %>% mutate(a = a*10000, b=b*10000, c=c*10000)
yy <- xx %>%
group_by(Origin) %>%
summarise_at(vars(DTF, a, b, c), funs(mean, sd), na.rm = T) %>%
rename(c=c_mean, b=b_mean, DTF=DTF_mean) %>%
filter(Origin == myOrigin)
myLT <- paste("Mean +/-", sdMult, "* sd")
#
OriginLevels <- unique(c("Other", "\"Adapted\"", myOrigin, myOrigins))
myYmin1 <- yy$c   - sdMult * yy$c_sd
myYmax1 <- yy$c   + sdMult * yy$c_sd
myXmin1 <- yy$DTF - sdMult * yy$DTF_sd
myXmax1 <- yy$DTF + sdMult * yy$DTF_sd
x1 <- xx %>%
mutate(Origin = ifelse(DTF > myXmin1 & DTF < myXmax1 &
!Origin %in% myOrigins, "\"Adapted\"", Origin),
Origin = factor(Origin, levels = OriginLevels))
# Plot
mp1 <- ggplot(yy, aes(x = DTF, y = c)) +
geom_point(data = x1, aes(color = Origin), alpha = 0.5) +
geom_point(aes(pch = Origin), size = 3) +
geom_errorbar(aes(ymin = myYmin1, ymax = myYmax1)) +
geom_errorbarh(aes(xmin = myXmin1, xmax = myXmax1)) +
theme_AGL +
scale_shape_manual(name = myLT, values = 18) +
scale_color_manual(values = colors[c(7,8,1,3,5,6,2)]) +
labs(title = myTitle,
y = expression(paste("Photoperiod response (", italic(c), " x 10000)")),
x = "Days from sowing to flower (days)") +
guides(shape = guide_legend(order = 1), colour = guide_legend(order = 2))
# Prep data
myYmin2 <- yy$b   - sdMult * yy$b_sd
myYmax2 <- yy$b   + sdMult * yy$b_sd
myXmin2 <- yy$DTF - sdMult * yy$DTF_sd
myXmax2 <- yy$DTF + sdMult * yy$DTF_sd
x2 <- xx %>%
mutate(Origin = ifelse(DTF > myXmin2 & DTF < myXmax2 &
!Origin %in% myOrigins, "\"Adapted\"", Origin),
Origin = factor(Origin, levels = OriginLevels))
# Plot
mp2 <- ggplot(yy, aes(x = DTF, y = b)) +
geom_point(data = x2, aes(color = Origin), alpha = 0.5) +
geom_point(aes(pch = Origin), size = 3) +
geom_errorbar(aes(ymin = myYmin2, ymax = myYmax2)) +
geom_errorbarh(aes(xmin = myXmin2, xmax = myXmax2)) +
theme_AGL +
scale_shape_manual(name = myLT, values = 18) +
scale_color_manual(values = colors[c(7,8,1,3,5,6,2)]) +
labs(y = expression(paste("Temperature response (", italic(b), " x 10000)")),
x = "Days from sowing to flower (days)") +
guides(shape = guide_legend(order = 1), colour = guide_legend(order = 2))
# Prep data
myDTFmin <- yy$DTF - sdMult * yy$DTF_sd
myDTFmax <- yy$DTF + sdMult * yy$DTF_sd
myYmin3 <- yy$c - sdMult * yy$c_sd
myYmax3 <- yy$c + sdMult * yy$c_sd
myXmin3 <- yy$b - sdMult * yy$b_sd
myXmax3 <- yy$b + sdMult * yy$b_sd
x3 <- xx %>%
mutate(Origin = ifelse(DTF > myDTFmin & DTF < myDTFmax &
!Origin %in% myOrigins, "\"Adapted\"", Origin),
Origin = factor(Origin, levels = OriginLevels))
# Plot
mp3 <- ggplot(yy, aes(x = b, y = c)) +
geom_point(data = x3, aes(color = Origin), alpha = 0.5) +
geom_point(aes(pch = Origin), size = 3) +
geom_errorbar(aes(ymin = myYmin3, ymax = myYmax3)) +
geom_errorbarh(aes(xmin = myXmin3, xmax = myXmax3)) +
theme_AGL +
scale_shape_manual(name = myLT, values = 18) +
scale_color_manual(values = colors[c(7,8,1,3,5,6,2)]) +
labs(y = expression(paste("Photoperiod response (", italic(c), " x 10000)")),
x = expression(paste("Temperature response (", italic(b), " x 10000)"))) +
guides(shape = guide_legend(order = 1), colour = guide_legend(order = 2))
# Append Plots
mp <- ggarrange(mp1, mp2, mp3, ncol = 3, nrow = 1, align = "hv",
common.legend = T, legend = "right")
mp
}
# Plot
mp1 <- gg_adapted("A) Sutherland, Canada 2017", "Sutherland, Canada 2017", 2, "Canada")
mp2 <- gg_adapted("B) Jessore, Bangladesh 2017", "Jessore, Bangladesh 2017", 1,
"Bangladesh", c("India", "Bangladesh", "ICARDA"))
mp3 <- gg_adapted("C) Metaponto, Italy 2017", "Metaponto, Italy 2017", 2,
"Italy", c("Italy", "Spain", "Greece", "Macedonia", "Serbia"))
mp4 <- gg_adapted(expression(paste("D) ", italic("T"), " = 13 ", degree, "C, ",
italic("P"), " = 11.5 h")), sdMult = 1,
myOrigin = "Pakistan", predictDTF = T, meanT = 13, meanP = 11.5)
mp <- ggarrange(mp1,mp2,mp3,mp4, nrow=4,ncol=1, align = "hv")
ggsave("SupplementalFigure8_Adapted.png", mp, width = 11, height = 14)
ggsave("Temp/Temp_SF8_1.png", mp1, width = 11, height = 3.75)
ggsave("Temp/Temp_SF8_2.png", mp2, width = 11, height = 3.75)
ggsave("Temp/Temp_SF8_3.png", mp3, width = 11, height = 3.75)
ggsave("Temp/Temp_SF8_4.png", mp4, width = 11, height = 3.75)
mp
# Prep data
xx <- readRDS("data/AMMI.rds")
perc <- xx[[3]]
xx <- xx$biplot %>% rownames_to_column("Id")
ets <- select(ff, ExptShort, MacroEnv) %>%
filter(ExptShort %in% xx$Id[xx$type == "ENV"]) %>%
mutate(ExptShort = as.character(ExptShort)) %>%
rename(Id = ExptShort)
gen <- xx %>% filter(type == "GEN")
env <- xx %>% filter(type == "ENV") %>%
left_join(ets, by = "Id") %>%
mutate(Id = factor(Id, levels = names_ExptShort))
xmed<-mean(env[,"PC1"])
ymed<-mean(env[,"PC2"])
yy <- c("darkgreen", "darkred", "steelblue")
# Plot AMMI
mp <- ggplot(gen) +
theme_AGL +
theme(legend.position = "none",
strip.background = element_rect(fill = "White"),
panel.grid.major = element_line(colour = "black", size = 0.75)) +
scale_x_continuous(breaks = 0) +
scale_y_continuous(breaks = 0) +
geom_point(aes(x = PC1, y = PC2),
color = "Black", fill = "grey80", pch = 21) +
geom_segment(data = env, lwd = 1, arrow = arrow(length = unit(0.30, "cm")),
aes(x = xmed, y = ymed, xend = PC1, yend = PC2, group = Id) ) +
ggrepel::geom_label_repel(data = env, fill = "grey90", aes(x = PC1, y = PC2, label = Id),
#           Ba    In     It      Mo     Ne     Ro       Sp      Su         Us
nudge_y = c(0,.5, 1,.5, .3,.3, -.2,0,  .5,0,  .5, .5,  .2, 0, -.5,-.5,1, -.5),
nudge_x = c(.3,0, 0, 0,  0, 0,  .4,.4, .4,.3,  0,-.1, -.2,.3,   0,  0,0,   0),
segment.colour = alpha("Black", 0.5)) +
labs(x = paste0("IPCA1 (", perc[1,1], "%)"),
y = paste0("IPCA2 (", perc[2,1], "%)"))
ggsave("Figure10_AMMI.png", mp, width = 6, height = 4)
mp
# Prep data
xx <- dd %>% select(Entry, Expt, DTF2_scaled) %>%
spread(Expt, DTF2_scaled)
xx <- xx %>% column_to_rownames("Entry") %>% as.matrix()
# PCA
mypca <- PCA(xx, ncp = 10, graph = F)
# Heirarcical clustering
mypcaH <- HCPC(mypca, nb.clust = 8, graph = F)
perc <- round(mypca[[1]][,2], 1)
x1 <- mypcaH[[4]]$X %>%
rownames_to_column("Entry") %>%
mutate(Entry = as.numeric(Entry)) %>%
rename(PC1=Dim.1, PC2=Dim.2, PC3=Dim.3, PC4=Dim.4, PC5=Dim.5,
PC6=Dim.6, PC7=Dim.7, PC8=Dim.8, PC9=Dim.9, PC10=Dim.10,
Cluster=clust) %>%
left_join(select(ldp, Entry, Name, Origin), by = "Entry") %>%
left_join(select(ct, Origin=Country, Region), by = "Origin") %>%
select(Entry,Name,Origin,Region,everything())
write.csv(x1, "data/data_PCA_Results.csv", row.names = F)
#
x2 <- dd %>% left_join(select(x1, Entry, Cluster), by = "Entry") %>%
group_by(Expt, ExptShort, Cluster) %>%
summarise(mean = mean(DTF2_scaled, na.rm = T), sd = sd(DTF2_scaled, na.rm = T)) %>%
ungroup() %>%
mutate(ClusterNum = plyr::mapvalues(Cluster, as.character(1:8), summary(x1$Cluster)))
x3 <- x1 %>% count(Cluster) %>%
mutate(Cluster = factor(Cluster, levels = rev(levels(Cluster))), y = n/2)
for(i in 2:nrow(x3)) { x3$y[i] <- sum(x3$n[1:(i-1)]) + (x3$n[i]/2) }
# Plot A) PCA 1v2
find_hull <- function(df) df[chull(df[,"PC1"], df[,"PC2"]), ]
polys <- plyr::ddply(x1, "Cluster", find_hull) %>% mutate(Cluster = factor(Cluster))
mp1.1 <- ggplot(x1) +
geom_polygon(data = polys, alpha = 0.15, aes(x = PC1, y = PC2,  fill = Cluster)) +
geom_point(aes(x = PC1, y = PC2, colour = Cluster)) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
theme_classic() + theme(legend.position = "none") +
labs(x = paste0("PC1 (", perc[1], "%)"),
y = paste0("PC2 (", perc[2], "%)"))
# Plot A) PCA 1v3
find_hull <- function(df) df[chull(df[,"PC1"], df[,"PC3"]), ]
polys <- plyr::ddply(x1, "Cluster", find_hull) %>% mutate(Cluster = factor(Cluster))
mp1.2 <- ggplot(x1) +
geom_polygon(data = polys, alpha = 0.15, aes(x = PC1, y = PC3,  fill = Cluster)) +
geom_point(aes(x = PC1, y = PC3, colour = Cluster)) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
theme_classic() + theme(legend.position = "none") +
labs(x = paste0("PC1 (", perc[1], "%)"),
y = paste0("PC3 (", perc[3], "%)"))
# Plot A) PCA 2v3
find_hull <- function(df) df[chull(df[,"PC2"], df[,"PC3"]), ]
polys <- plyr::ddply(x1, "Cluster", find_hull) %>% mutate(Cluster = factor(Cluster))
mp1.3 <- ggplot(x1) +
geom_polygon(data = polys, alpha = 0.15, aes(x = PC2, y = PC3,  fill = Cluster)) +
geom_point(aes(x = PC2, y = PC3, colour = Cluster)) +
scale_fill_manual(values = colors) +
scale_color_manual(values = colors) +
theme_classic() + theme(legend.position = "none") +
labs(x = paste0("PC2 (", perc[2], "%)"),
y = paste0("PC3 (", perc[3], "%)"))
# Plot B) DTF
mp2 <- ggplot(x2, aes(x = ExptShort, y = mean, group = Cluster)) +
geom_ribbon(aes(ymin = mean - sd, ymax = mean + sd, fill = Cluster),
alpha = 0.1, color = NA) + #
geom_point(aes(color = Cluster)) +
geom_line(aes(color = Cluster), size = 1) +
scale_color_manual(values = colors) +
scale_fill_manual(values = colors) +
coord_cartesian(ylim = c(0.95,5.05), expand = F) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
legend.position = "none",
strip.placement = "outside",
axis.line = element_line(), axis.ticks = element_line()) +
labs(y = "DTF (scaled 1-5)", x = NULL)
# Prep data
xx <- read.csv("data/model_18_coefs.csv") %>%
left_join(select(x1,Entry,Cluster), by = "Entry") %>%
select(Entry, Name, Cluster, a, b, c) %>%
gather(Trait, Value, 4:ncol(.))
genos <- c("ILL 7663 AGL", "ILL 5888 AGL", "ILL 4400 AGL", "Laird AGL")
x4 <- xx %>% filter(Name %in% genos) %>%
mutate(Name = factor(Name, levels = genos),
Name = gsub(" AGL", "", Name))
# Plot a, b and c
mp3 <- ggplot(xx, aes(x = Cluster, y = Value * 10000) ) +
geom_violin(aes(fill = Cluster), color = NA, alpha = 0.7) +
geom_quasirandom(size = 0.25) +
geom_point(data = x4, fill = "grey", aes(shape = Name)) +
facet_wrap(Trait~., nrow = 1, scales = "free") +
theme_AGL +
theme(legend.position = "bottom",
strip.text = element_text(face = "italic")) +
scale_shape_manual(name = NULL, values = c(22,25,23,24)) +
scale_fill_manual(name = NULL, values = colors) +
guides(fill = F) +
labs(y = "x 10000", x = "Cluster")
# Append
mp1 <- ggarrange(mp1.1, mp1.2, mp1.3,
nrow = 1, ncol = 3, hjust = 0)
mp <- ggarrange(mp1, mp2, mp3, ncol = 1, nrow = 3,
heights = c(1, 1.5, 1.3), hjust = 0,
labels = c("A)","B)","C)"),
font.label = list(size = 11))
ggsave("Figure11_PCA.png", mp, width = 8, height = 8)
ggsave("Temp/Temp_F11_1.png", mp1, width = 8, height = 1*8/3.8)
ggsave("Temp/Temp_F11_2.png", mp2, width = 8, height = 1.5*8/3.8)
ggsave("Temp/Temp_F11_3.png", mp3, width = 8, height = 1.3*8/3.8)
#
summary(x1$Cluster)
mp
# Prep data
xx <- read.csv("data/data_PCA_Results.csv") %>%
mutate(Region = ifelse(Origin == "ICARDA", "ICARDA", as.character(Region)))
# Plot PCA
mp <- ggplot(xx, aes(x = PC1, y = PC2, color = Region, shape = Region)) +
geom_point(alpha = 0.7, size = 2) +
scale_color_manual(values = colors[c(1,5,3,8,7)]) +
scale_shape_manual(values = c(16,17,18,15,13)) +
theme_AGL
ggsave("Additional/AdditionalFigure10_PCA.png", mp, width = 6, height = 4)
mp
# Prep data
x1 <- read.csv("data/data_PCA_Results.csv") %>% mutate(Cluster = factor(Cluster))
xx <- ldp %>% left_join(select(x1, Entry, Cluster), by = "Entry") %>%
mutate(test1 = factor(paste(Origin, Cluster)))
x1 <- xx %>% filter(Origin != "ICARDA") %>%
group_by(Origin, Cluster) %>% summarise(Count = n()) %>%
spread(Cluster, Count) %>%
left_join(select(ct, Origin=Country, Lat, Lon), by = "Origin") %>%
ungroup() %>% as.data.frame()
x1[is.na(x1)] <- 0
# Plot A) Bars
mp <- ggplot(xx, aes(x = Origin, fill = Cluster)) +
geom_bar(stat = "count") +
facet_grid(.~Cluster, scales = "free", space = "free") + #
scale_fill_manual(values = colors) +
theme_AGL +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
legend.position = "none") +
labs(x = NULL)
ggsave("Temp/Temp_S9_1.png", width = 16, height = 4)
# Plot B) Map Pies
invisible(png("Temp/Temp_S9_2.png", width = 1200, height = 550, res = 150))
par(mai = c(0,0,0,0), xaxs = "i", yaxs = "i")
mapPies(dF = x1, nameX = "Lon", nameY = "Lat",
nameZs = c("1","2","3","4","5","6","7","8"), symbolSize = 1,
zColours = colors,
xlim = c(-140,110), ylim = c(0,20),
oceanCol = "grey90", landCol = "white", borderCol = "black")
invisible(dev.off())
# Append A) and B)
im1 <- image_read("Temp/Temp_S9_1.png") %>% image_scale("1200x") %>%
image_annotate("A)", size = 20)
im2 <- image_read("Temp/Temp_S9_2.png") %>%
image_annotate("B)", size = 20)
im <- image_append(c(im1,im2), stack = T)
image_write(im, "SupplementalFigure9_ClusterOrigins1.png")
image_read("SupplementalFigure9_ClusterOrigins1.png")
# Prep data
x1 <- read.csv("data/data_PCA_Results.csv") %>% mutate(Cluster = factor(Cluster))
xx <- ldp %>% select(Entry, Name, Lat, Lon) %>% left_join(x1, by = "Entry") %>%
left_join(select(ct, Origin=Country, cLat=Lat, cLon=Lon), by = "Origin") %>%
mutate(Lat = ifelse(is.na(Lat), cLat, Lat),
Lon = ifelse(is.na(Lon), cLon, Lon),
Lat = ifelse(duplicated(Lat), jitter(Lat, 1, 1), Lat),
Lon = ifelse(duplicated(Lon), jitter(Lon, 1, 1), Lon), Size = 1)
# Plot Map
invisible(png("Additional/AdditionalFigure11_LDPOriginsByCluster.png", width = 1200, height = 685, res = 150))
par(mai = c(0,0,0,0), xaxs = "i", yaxs = "i")
mapBubbles(dF = xx, nameX = "Lon", nameY = "Lat", nameZColour = "Cluster",
nameZSize = "Size", symbolSize = 0.25, pch = 20,
colourPalette = colors[1:8],
xlim = c(-140,110), ylim = c(5,20), addLegend = F, colourLegendTitle = NULL,
oceanCol = "grey90", landCol = "white", borderCol = "black")
invisible(dev.off())
image_read("Additional/AdditionalFigure11_LDPOriginsByCluster.png")
# Prep data
x1 <- read.csv("data/data_PCA_Results.csv") %>% mutate(Cluster = factor(Cluster))
yy <- c("India", "Bangladesh", "Ethiopia", "Pakistan", "Jordan",
"Iran", "Turkey", "Syria", "Chile", "Spain", "Czech Republic", "Canada" )
xx <- dd %>% left_join(ldp, by = "Entry") %>%
filter(ExptShort %in% c("Ro17", "It17", "Ba17"), Origin != "Unknown") %>%
left_join(select(x1, Entry, Cluster), by = "Entry") %>%
mutate(Origin = factor(Origin, levels = unique(Origin)[rev(order(unique(Origin)))])) %>%
filter(Origin %in% yy) %>%
mutate(Origin = factor(Origin, levels = yy))
# Plot
mp <- ggplot(xx, aes(y = DTF2, x = Origin)) +
geom_quasirandom(aes(color = Cluster)) +
facet_grid(Expt~., scales = "free_y") +
scale_color_manual(values = colors) +
theme_AGL + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(y = "Days from sowing to flower", x = NULL)
ggsave("Additional/AdditionalFigure12_DTFByCluster.png", mp, width = 10, height = 8)
mp
